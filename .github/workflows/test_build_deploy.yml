# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: test-build-deploy-workflow

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read  

jobs:
  test_and_lint:    

    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r server/requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      working-directory: server
      run: |
        pytest tests/*.py

  build_and_delpoy:
    needs: test_and_lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Log in to the GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Docker Image to ghcr
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/ciaos:${{ github.sha }}
        
    - name: POST request to re-deploy on portainer webhook
      run: |
        curl -X POST https://docker.cialabs.org/api/stacks/webhooks/4e3fb43a-54dc-459a-be5a-36988796405e?BUILD_HASH=${{ github.sha }} -H "Content-Type: application/json" 
